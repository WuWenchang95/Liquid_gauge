C51 COMPILER V9.54   SYSTEM_CLOCK                                                          08/08/2019 01:38:59 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE SYSTEM_CLOCK
OBJECT MODULE PLACED IN .\hex\system_clock.obj
COMPILER INVOKED BY: D:\OfficeSoftware\KEIL_C51\C51\BIN\C51.EXE ..\..\Library\Sources\system_clock.c COMPACT ROM(COMPACT
                    -) OPTIMIZE(9,SIZE) BROWSE DEBUG OBJECTEXTEND PRINT(.\lst\system_clock.lst) TABS(2) OBJECT(.\hex\system_clock.obj)

line level    source

   1          #ifndef _SYSTEM_CLOCK_C_
   2          #define _SYSTEM_CLOCK_C_
   3          /*********************************************************************************************************
             -************/
   4          #include "ca51f_config.h"
   5          #if (IC_TYPE == IC_TYPE_CA51F2X)
              #include "../../includes/ca51f2sfr.h"
              #include "../../includes/ca51f2xsfr.h"
              #include "../../includes/gpiodef_f2.h"
              #elif (IC_TYPE == IC_TYPE_CA51F3X)
  10          #include "../../includes/ca51f3sfr.h"
  11          #include "../../includes/ca51f3xsfr.h"
  12          #include "../../includes/gpiodef_f3.h"
  13          #endif
  14          #include "../../includes/system.h"
  15          #include "../../Library/includes/system_clock.h"
  16          #include <intrins.h>
  17          /*********************************************************************************************************
             -************/
  18          #if 0
              void Sys_Clk_Set_IRCH(void)
              {
                CKCON |= IHCKE;
                CKSEL = (CKSEL&0xF8) | CKSEL_IRCH;    
              }
              
              void Sys_Clk_Set_IRCL(void)
              {
                CKCON |= ILCKE;
                CKSEL = (CKSEL&0xF8) | CKSEL_IRCL;    
              }
              #endif
  31          
  32          //void Sys_Clk_Set_XOSCL(void)
  33          //{
  34          //#if (IC_TYPE == IC_TYPE_CA51F3X)
  35          //  GPIO_Init(P32F,P32_XOSCL_IN_SETTING);
  36          //  GPIO_Init(P33F,P33_XOSCL_OUT_SETTING);
  37          //#elif  (IC_TYPE == IC_TYPE_CA51F2X)
  38          //  GPIO_Init(P71F,P71_XOSCL_OUT_SETTING);
  39          //  GPIO_Init(P72F,P72_XOSCL_IN_SETTING);
  40          //#endif
  41          //  CKCON |= XLCKE;
  42          //  while(!(CKCON & XLSTA));
  43          //  CKSEL = (CKSEL&0xF8) | CKSEL_XOSCL;   
  44          //}
  45          #if 1
  46          void Sys_Clk_Set_PLL(unsigned char Multiple)
  47          {
  48   1        static bit NeedTrim = 1;
  49   1        unsigned char ck_bak;
  50   1        if(Multiple < 2 || Multiple > 8) return;
  51   1        if(NeedTrim)
  52   1        {
C51 COMPILER V9.54   SYSTEM_CLOCK                                                          08/08/2019 01:38:59 PAGE 2   

  53   2          ck_bak = CKCON;
  54   2          CKCON |= ILCKE|IHCKE|TFCKE;
  55   2          VCKDH = 1600/256;
  56   2          VCKDL = 1600%256;
  57   2          RCCON = MODE(2) | MSEX(0) | CKSS(8);
  58   2          while(RCCON&0xC0);  
  59   2          
  60   2          RCTAGH = RCMSLH;
  61   2          RCTAGL = RCMSLL;
  62   2          
  63   2          CKSEL = (CKSEL&0xF8) | CKSEL_TFRC;      
  64   2          RCCON = MODE(3) | MSEX(0) | CKSS(8);
  65   2          while(RCCON&0xC0);    
  66   2        }
  67   1      
  68   1        PLLCON = PLLON(1) | MULFT(Multiple-2);
  69   1        while(!(PLLCON & PLSTA));
  70   1        CKSEL = (CKSEL&0xF8) | CKSEL_PLL;   
  71   1        if(NeedTrim)
  72   1        {
  73   2          CKCON = ck_bak | IHCKE;
  74   2          NeedTrim = 0;
  75   2        }
  76   1      }
  77          #endif
  78          //#if (IC_TYPE == IC_TYPE_CA51F2X)
  79          //void Sys_Clk_Set_XOSCH(void)
  80          //{
  81          //  GPIO_Init(P74F,P74_XOSCH_IN_SETTING);
  82          //  GPIO_Init(P73F,P73_XOSCH_OUT_SETTING);
  83          //  CKCON |= XHCKE;
  84          //  while(!(CKCON & XHSTA));
  85          //  CKSEL = (CKSEL&0xF8) | CKSEL_XOSCH;   
  86          //}
  87          //#endif
  88          //void Sys_Clk_Set_TFRC(void)
  89          //{
  90          //  CKCON |= TFCKE;
  91          //  CKSEL = (CKSEL&0xF8) | CKSEL_TFRC;    
  92          //}
  93          
  94          /*********************************************************************************************************
             -************/
  95          #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     94    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
